#!/bin/sh

base_path=/usr/local

load_modules() {
  # Disable module locking
  chmod 0666 /sys/module/lsm/parameters/module_locking
  echo 0 > /sys/module/lsm/parameters/module_locking

  if [ x$( cat /proc/modules|grep -o cifs ) = "x" ]; then
    /sbin/insmod $base_path/modules/cifs.ko || exit 1
  fi
  if [ x$( cat /proc/modules|grep -o md4 ) = "x" ]; then
    /sbin/insmod $base_path/modules/md4.ko || exit 1
  fi

  # Enable modules locking
  echo 1 > /sys/module/lsm/parameters/module_locking
  chmod 0400 /sys/module/lsm/parameters/module_locking
  echo "Modules loaded"
}

unload_modules() {
  if [ x$( cat /proc/modules|grep -o cifs ) = "xcifs" ]; then
    /sbin/rmmod cifs
  fi
  if [ x$( cat /proc/modules|grep -o md4 ) = "xmd4" ]; then
    /sbin/rmmod md4
  fi
  echo "Modules removed"
}

# In ../etc/fstab you can add your samba shares.
# NOTE: - replace username and password with the ones you have.
#       - As it is now the share is mounted with full read write permissions.
#         Change it to your own needs.
#       - Replace server path in this case //10.0.0.13/3000GbXBMC with your own.
#       - Create a directory on a removable drive USB or SD-card on where you can
#         mount your smb share. It doesn't work on ~/Downloads files won't be
#         visible in the Files app from chromeos.
mount_cifs() {
  cat $base_path/etc/fstab | while read line
    do

      if [ "`echo x$line|grep -o '^x#'`" = 'x#' -o  "x$line" = 'x' ]; then   
        continue
      fi 
      mount_server=$(echo $line|cut -d ' ' -f1)
      mount_point=$(echo $line|cut -d ' ' -f2)
      mount_options=$(echo $line|cut -d ' ' -f4)
      if [ x$( cat /proc/mounts|cut -d ' ' -f2|grep -x $mount_point ) = x$mount_point ]; then
        echo "$mount_point is already mounted"
      else
        mount -t cifs -o $mount_options $mount_server $mount_point && echo "Mounted $mount_server on $mount_point succesfull" || echo "Mount failed for $mount_server on $mount_point "
      fi
    done
}
# unmounts.
umount_cifs() {
  cat $base_path/etc/fstab | while read line
    do
      if [ "`echo x$line|grep -o '^x#'`" = 'x#' -o  "x$line" = 'x' ]; then
        continue
      fi 
      mount_server=$(echo $line|cut -d ' ' -f1)
      mount_point=$(echo $line|cut -d ' ' -f2)
      if [ x$( cat /proc/mounts|cut -d ' ' -f2|grep -x $mount_point ) = x$mount_point ]; then  
        umount "$mount_point" && echo "Unmounting $mount_point succesfull" || echo "Cannot unmount $mount_point"
      else
        echo "$mount_server is not mounted on $mount_point"        
      fi 
    done
}
# check if script is run as root
uid=`id -u $USERNAME`
if [ $uid -ne 0 ]; then
  echo "$0 must be run as root"
  exit 1
fi

case "$1" in
  start)
    load_modules
    mount_cifs
    ;;
  stop)
    umount_cifs
    sleep 1
    unload_modules
    ;;

  *)
    echo "Usage: $0 {start|stop}"
esac
